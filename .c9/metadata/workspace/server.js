{"changed":true,"filter":false,"title":"server.js","tooltip":"/server.js","value":"//setup Dependencies\nvar Devices = require('./back/models/devices');\n\nvar connect = require('connect')\n    , express = require('express')\n    , port = process.env.PORT\n    , ip = process.env.IP ;\n\n//Setup Express\nvar server = express.createServer();\nserver.configure(function(){\n    server.set('views', __dirname + '/front/views');\n    server.set('view options', { layout: false });\n    server.use(connect.bodyParser());\n    server.use(express.cookieParser());\n    server.use(express.session({ secret: \"shhhhhhhhh!\"}));\n    server.use(connect.static(__dirname + '/front/static'));\n    server.use(server.router);\n});\n\nrequire('./config/routes')(server);\nserver.get('/*', function (req, res) {\n    throw new NotFound();\n});\n\n//setup the errors\nserver.error(function(err, req, res, next){\n    console.log(\"Erreur\"+err+ \" on request\"+req);\n\n    if (err instanceof NotFound) {\n        res.render('errors/404.jade', { locals: {\n                  title : '404 - Not Found'\n                 ,description: ''\n                 ,author: ''\n                 ,analyticssiteid: 'XXXXXXX'\n                },status: 404 });\n    } else {\n        res.render('errors/500.jade', { locals: {\n                  title : 'The Server Encountered an Error'\n                 ,description: ''\n                 ,author: ''\n                 ,analyticssiteid: 'XXXXXXX'\n                 ,error: err\n                },status: 500 });\n    }\n\n});\n\n\nfunction NotFound(msg) {\n    this.name = 'NotFound';\n    Error.call(this, msg);\n    Error.captureStackTrace(this, arguments.callee);\n}\n\nserver.listen(port, ip);\n\n\n\nconsole.log('Listening on http://0.0.0.0:' + port );","undoManager":{"mark":18,"position":23,"stack":[[{"group":"doc","deltas":[{"start":{"row":12,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["// Mongo connection","mongoose.connect('mongodb://'+ip+'/jarvis');","var db = mongoose.connection;","db.on('error', console.error.bind(console, 'Connexion to Mongo failed'));","db.once('open', function callback () {","    console.log(\"Connexion to Mongo success !\");","});",""]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["    , mongoose = require('mongoose')",""]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":0},"end":{"row":74,"column":1},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":1},"end":{"row":74,"column":2},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":2},"end":{"row":75,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":106,"column":0},"end":{"row":106,"column":1},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":106,"column":1},"end":{"row":106,"column":2},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":0},"end":{"row":107,"column":0},"action":"remove","lines":["/*","socket.on('commande', function(data){","","\t console.log(\"commande data \"+data);","","","\t\t    var code = data.code;","\t\t    console.log(\"commande data.code \"+code);","\t\t    var status = data.status;","\t\t    console.log(\"commande data.status \"+status);","\t\t    var cb = function (err, device) {","","\t\t        if (err) {","\t\t            //res.send(\"ERROR\")","\t\t        \tconsole.log(\"ERR \");","\t\t        \tsocket.emit('server_message',\"ERROR\");","\t\t        }","","\t\t        exec('sudo /var/www/api/rf/dio/send 0 '+'12345678'+' '+code+' '+status, function (error, stdout, stderr) {","\t\t            if(err) console.error(err);","\t\t            // output is in stdout","","\t\t        });","\t\t        socket.emit('server_message',\"Done\");","","\t\t    };","","\t\t    //Devices.updateStatus(code, status, cb);","","","\t});","","*/",""]}]}],[{"group":"doc","deltas":[{"start":{"row":65,"column":0},"end":{"row":66,"column":0},"action":"remove","lines":["    \t//socket.emit('devices',devices);",""]}]}],[{"group":"doc","deltas":[{"start":{"row":63,"column":0},"end":{"row":64,"column":0},"action":"remove","lines":["        //res.writeHead(200, {\"Content-Type\": \"application/json\"});",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["var exec = require('child_process').exec;",""]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":52,"column":17},"end":{"row":53,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":0},"end":{"row":53,"column":1},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":1},"end":{"row":53,"column":2},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":0},"end":{"row":77,"column":1},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":1},"end":{"row":77,"column":2},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":2},"end":{"row":78,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["    , io = require('socket.io')",""]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":0},"end":{"row":76,"column":2},"action":"remove","lines":["","//Setup Socket.IO","/*","io = io.listen(server);","io.sockets.on('connection', function(socket){","\tconsole.log('Client Connected');","\tDevices.findAll(function (err, devices) {","","        if (err) {","            //res.send(\"ERROR\")","        }","        console.log('Devices '+devices);","","    });","","\tsocket.on('message', function(data){","\t\tsocket.broadcast.emit('server_message',data);","\t\tsocket.emit('server_message',data);","\t});","","socket.on('disconnect', function(){","  console.log('Client Disconnected.');","});","","});","","*/"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":14,"column":37},"end":{"row":14,"column":37},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1428312468797}